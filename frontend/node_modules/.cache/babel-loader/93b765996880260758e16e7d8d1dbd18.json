{"ast":null,"code":"import _toConsumableArray from \"/Users/macbookpro/Desktop/Elisa/LIHO/liho/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/macbookpro/Desktop/Elisa/LIHO/liho/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/Elisa/LIHO/liho/src/component/Csv.js\";\nimport React, { useState } from \"react\";\nfunction CsvReader() {\n  var _this = this;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    file = _useState2[0],\n    setFile = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    array = _useState4[0],\n    setArray = _useState4[1];\n  var fileReader = new FileReader();\n  var handleOnChange = function handleOnChange(e) {\n    setFile(e.target.files[0]);\n  };\n  var csvFileToArray = function csvFileToArray(string) {\n    var csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\n    var csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\n    var array = csvRows.map(function (i) {\n      var values = i.split(\",\");\n      var obj = csvHeader.reduce(function (object, header, index) {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return obj;\n    });\n    setArray(array);\n  };\n  var handleOnSubmit = function handleOnSubmit(e) {\n    e.preventDefault();\n    if (file) {\n      fileReader.onload = function (event) {\n        var text = event.target.result;\n        print(text);\n        csvFileToArray(text);\n      };\n      fileReader.readAsText(file);\n    }\n  };\n  var headerKeys = Object.keys(Object.assign.apply(Object, [{}].concat(_toConsumableArray(array))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, \"REACTJS CSV IMPORT EXAMPLE \"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"csvFileInput\",\n    accept: \".csv\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      handleOnSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }\n  }, \"IMPORT CSV\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    key: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }\n  }, headerKeys.map(function (key) {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }\n    }, key);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }\n  }, array.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }\n    }, Object.values(item).map(function (val) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 20\n        }\n      }, val);\n    }));\n  }))));\n}\nexport default CsvReader;","map":{"version":3,"names":["React","useState","CsvReader","file","setFile","array","setArray","fileReader","FileReader","handleOnChange","e","target","files","csvFileToArray","string","csvHeader","slice","indexOf","split","csvRows","map","i","values","obj","reduce","object","header","index","handleOnSubmit","preventDefault","onload","event","text","result","print","readAsText","headerKeys","Object","keys","assign","textAlign","key","item","id","val"],"sources":["/Users/macbookpro/Desktop/Elisa/LIHO/liho/src/component/Csv.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\n   \nfunction CsvReader() {\n     const [file, setFile] = useState();\n     const [array, setArray] = useState([]);\n   \n     const fileReader = new FileReader();\n   \n     const handleOnChange = (e) => {\n       setFile(e.target.files[0]);\n     };\n   \n     const csvFileToArray = string => {\n       const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\n       const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\n   \n       const array = csvRows.map(i => {\n         const values = i.split(\",\");\n         const obj = csvHeader.reduce((object, header, index) => {\n           object[header] = values[index];\n           return object;\n         }, {});\n         return obj;\n       });\n   \n       setArray(array);\n     };\n   \n     const handleOnSubmit = (e) => {\n       e.preventDefault();\n   \n       if (file) {\n         fileReader.onload = function (event) {\n           const text = event.target.result;\n           print(text)\n           csvFileToArray(text);\n         };\n   \n         fileReader.readAsText(file);\n       }\n     };\n   \n     const headerKeys = Object.keys(Object.assign({}, ...array));\n   \n     return (\n       <div style={{ textAlign: \"center\" }}>\n         <h1>REACTJS CSV IMPORT EXAMPLE </h1>\n         <form>\n           <input\n             type={\"file\"}\n             id={\"csvFileInput\"}\n             accept={\".csv\"}\n             onChange={handleOnChange}\n           />\n   \n           <button\n             onClick={(e) => {\n               handleOnSubmit(e);\n             }}\n           >\n             IMPORT CSV\n           </button>\n         </form>\n   \n         <br />\n   \n         <table>\n           <thead>\n             <tr key={\"header\"}>\n               {headerKeys.map((key) => (\n                 <th>{key}</th>\n               ))}\n             </tr>\n           </thead>\n   \n           <tbody>\n             {array.map((item) => (\n               <tr key={item.id}>\n                 {Object.values(item).map((val) => (\n                   <td>{val}</td>\n                 ))}\n               </tr>\n             ))}\n           </tbody>\n         </table>\n       </div>\n     );\n   }\nexport default CsvReader;\n\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,SAAS,GAAG;EAAA;EAAA,gBACQD,QAAQ,EAAE;IAAA;IAA3BE,IAAI;IAAEC,OAAO;EAAA,iBACMH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BI,KAAK;IAAEC,QAAQ;EAEtB,IAAMC,UAAU,GAAG,IAAIC,UAAU,EAAE;EAEnC,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,CAAC,EAAK;IAC5BN,OAAO,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAGC,MAAM,EAAI;IAC/B,IAAMC,SAAS,GAAGD,MAAM,CAACE,KAAK,CAAC,CAAC,EAAEF,MAAM,CAACG,OAAO,CAAC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IAClE,IAAMC,OAAO,GAAGL,MAAM,CAACE,KAAK,CAACF,MAAM,CAACG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;IAElE,IAAMb,KAAK,GAAGc,OAAO,CAACC,GAAG,CAAC,UAAAC,CAAC,EAAI;MAC7B,IAAMC,MAAM,GAAGD,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC;MAC3B,IAAMK,GAAG,GAAGR,SAAS,CAACS,MAAM,CAAC,UAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAK;QACtDF,MAAM,CAACC,MAAM,CAAC,GAAGJ,MAAM,CAACK,KAAK,CAAC;QAC9B,OAAOF,MAAM;MACf,CAAC,EAAE,CAAC,CAAC,CAAC;MACN,OAAOF,GAAG;IACZ,CAAC,CAAC;IAEFjB,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EAED,IAAMuB,cAAc,GAAG,SAAjBA,cAAc,CAAIlB,CAAC,EAAK;IAC5BA,CAAC,CAACmB,cAAc,EAAE;IAElB,IAAI1B,IAAI,EAAE;MACRI,UAAU,CAACuB,MAAM,GAAG,UAAUC,KAAK,EAAE;QACnC,IAAMC,IAAI,GAAGD,KAAK,CAACpB,MAAM,CAACsB,MAAM;QAChCC,KAAK,CAACF,IAAI,CAAC;QACXnB,cAAc,CAACmB,IAAI,CAAC;MACtB,CAAC;MAEDzB,UAAU,CAAC4B,UAAU,CAAChC,IAAI,CAAC;IAC7B;EACF,CAAC;EAED,IAAMiC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACD,MAAM,CAACE,MAAM,OAAbF,MAAM,GAAQ,CAAC,CAAC,4BAAKhC,KAAK,GAAC,CAAC;EAE3D,oBACE;IAAK,KAAK,EAAE;MAAEmC,SAAS,EAAE;IAAS,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,6BAA2B,CAAK,eACpC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IACE,IAAI,EAAE,MAAO;IACb,EAAE,EAAE,cAAe;IACnB,MAAM,EAAE,MAAO;IACf,QAAQ,EAAE/B,cAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACzB,eAEF;IACE,OAAO,EAAE,iBAACC,CAAC,EAAK;MACdkB,cAAc,CAAClB,CAAC,CAAC;IACnB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACH,YAED,CAAS,CACJ,eAEP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,eAEN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,GAAG,EAAE,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACf0B,UAAU,CAAChB,GAAG,CAAC,UAACqB,GAAG;IAAA,oBAClB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAKA,GAAG,CAAM;EAAA,CACf,CAAC,CACC,CACC,eAER;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGpC,KAAK,CAACe,GAAG,CAAC,UAACsB,IAAI;IAAA,oBACd;MAAI,GAAG,EAAEA,IAAI,CAACC,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACdN,MAAM,CAACf,MAAM,CAACoB,IAAI,CAAC,CAACtB,GAAG,CAAC,UAACwB,GAAG;MAAA,oBAC3B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAKA,GAAG,CAAM;IAAA,CACf,CAAC,CACC;EAAA,CACN,CAAC,CACI,CACF,CACJ;AAEV;AACH,eAAe1C,SAAS"},"metadata":{},"sourceType":"module"}